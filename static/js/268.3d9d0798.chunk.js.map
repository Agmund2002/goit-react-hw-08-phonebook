{"version":3,"file":"static/js/268.3d9d0798.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/AddContactPage.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerStyled = styled.div`\n  & {\n    /*Basic styles*/\n    min-width: 320px;\n    max-width: 375px;\n    margin: 0 auto;\n  }\n\n  /*Tablet styles*/\n  @media only screen and (min-width: 768px) {\n    & {\n      max-width: 768px;\n    }\n  }\n\n  /*Desktop styles*/\n  @media only screen and (min-width: 1280px) {\n    & {\n      max-width: 1280px;\n    }\n  }\n`;\n","import { ContainerStyled } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\n\nexport const ModernForm = styled(Form)`\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.spacing(5)};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n\n  width: 270px;\n  font-weight: 500;\n`;\n\nexport const ModernField = styled(Field)`\n  width: 100%;\n  font-size: 16px;\n  border: 1px solid ${p => p.theme.colors.mainBorder};\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n  border-radius: 5px;\n`;\n\nexport const ModernErrorMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n max-width: 125px;\n`;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  Label,\n  ModernErrorMessage,\n  ModernField,\n  ModernForm,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst phoneRegExp =\n  '\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(1, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(9, 'Short phone number')\n    .max(18, 'Long phone number')\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handlerAdd = inputValue => {\n    if (contacts.find(({ name }) => name === inputValue.name)) {\n      return Notify.failure(`${inputValue.name} is already in contacts`);\n    }\n\n    dispatch(addContact(inputValue));\n    Notify.success(`${inputValue.name} added to contacts`);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        handlerAdd(values);\n        actions.resetForm();\n      }}\n    >\n      <ModernForm>\n        <Label>\n          Name\n          <ModernField name=\"name\" placeholder=\"Jane Doe\" />\n          <ModernErrorMessage component=\"span\" name=\"name\" />\n        </Label>\n\n        <Label>\n          Phone number\n          <ModernField type=\"tel\" name=\"number\" placeholder=\"000-000-0000\" />\n          <ModernErrorMessage component=\"span\" name=\"number\" />\n        </Label>\n\n        <Button className='button' type=\"submit\">Add contact</Button>\n      </ModernForm>\n    </Formik>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Container } from 'components/Container/Container';\nimport { SecondaryTitle } from 'components/individualElements/Title';\n\nconst AddContactPage = () => {\n  return (\n    <section>\n      <Container>\n        <SecondaryTitle isVisible={false}>New contact</SecondaryTitle>\n        <ContactForm />\n      </Container>\n    </section>\n  );\n};\n\nexport default AddContactPage;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n"],"names":["ContainerStyled","styled","_templateObject","_taggedTemplateLiteral","Container","_ref","children","_jsx","ModernForm","Form","p","theme","spacing","Label","_templateObject2","ModernField","Field","_templateObject3","colors","mainBorder","ModernErrorMessage","ErrorMessage","_templateObject4","error","Button","_templateObject5","schema","Yup","shape","name","min","max","required","number","matches","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","Formik","initialValues","validationSchema","onSubmit","values","actions","inputValue","find","Notify","concat","addContact","handlerAdd","resetForm","_jsxs","placeholder","component","type","className","SecondaryTitle","isVisible","state","items","selectIsLoading","isLoading","selectError"],"sourceRoot":""}