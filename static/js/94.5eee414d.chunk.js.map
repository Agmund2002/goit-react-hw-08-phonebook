{"version":3,"file":"static/js/94.5eee414d.chunk.js","mappings":"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","sources":["components/individualElements/Title.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx","redux/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: ${p => p.theme.spacing(7)};\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Message = styled.p`\n  font-size: 18px;\n  color: ${p => p.theme.colors.negative};\n`;\n","import styled from 'styled-components';\nimport { ImBin } from 'react-icons/im';\n\nexport const Button = styled.button`\n  width: 35px;\n  height: 35px;\n  border: 1px solid ${p => p.theme.colors.main};\n  border-radius: 50%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:active {\n    background-color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Icon = styled(ImBin)`\n  fill: ${p => p.theme.colors.negative};\n`;\n","import { useDispatch } from \"react-redux\";\nimport { Button, Icon } from \"./Contact.styled\";\nimport { deleteContact } from \"redux/operations\";\n\nexport const Contact = ({ data: { id, name, phone } }) => {\n  const dispatch = useDispatch()\n  \n  return (\n    <>\n      <span>{name}:</span>\n      <span>{phone}</span>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <Icon />\n      </Button>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n\n  font-size: 18px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  gap: ${p => p.theme.spacing(5)};\n  align-items: center;\n`;","import { Contact } from 'components/Contact/Contact';\nimport { Item, List } from './ContactList.styled';\nimport { useSelector} from 'react-redux';\nimport { selectFilterContacts } from 'redux/selectors';\nimport { Message } from 'components/individualElements/Title.styled';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectFilterContacts);\n\n  return (\n    <>\n      {filterContacts.length ? (\n        <List>\n          {filterContacts.map(item => (\n            <Item key={item.id}>\n              <Contact data={item} />\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Message>Phonebook is empty</Message>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(2)};\n\n  font-weight: 500;\n  font-size: 18px;\n\n  padding-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Input = styled.input`\n  font-size: 16px;\n  border: 1px solid ${p => p.theme.colors.main};\n  padding: ${p => p.theme.spacing(1)} ${p => p.theme.spacing(3)};\n  border-radius: 5px;\n  min-width: 200px;\n  max-width: 40%;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, Label } from './Filter.styled';\nimport { change } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(change(evt.target.value))}\n      />\n    </Label>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Message, SecondaryTitle } from 'components/individualElements/Title.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { BarLoader } from 'react-spinners';\n\nconst ContactsPage = () => {\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!error && (\n        <section>\n          <SecondaryTitle>Contacts</SecondaryTitle>\n          <Filter />\n          {!loading && <ContactList />}\n          {loading && <BarLoader />}\n        </section>\n      )}\n      {error && (\n        <Message>Oops... Something went wrong! Try reloading the page</Message>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.key;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n"],"names":["MainTitle","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","SecondaryTitle","_templateObject2","Message","_templateObject3","colors","negative","Button","main","accent","Icon","ImBin","Contact","_ref","_ref$data","data","id","name","phone","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","type","onClick","deleteContact","List","Item","ContactList","filterContacts","useSelector","selectFilterContacts","length","map","item","Label","Input","Filter","filter","selectFilter","value","onChange","evt","change","target","loading","selectIsLoading","error","selectError","useEffect","fetchContacts","BarLoader","selectContacts","state","contacts","items","isLoading","key","createSelector","toLowerCase","includes"],"sourceRoot":""}